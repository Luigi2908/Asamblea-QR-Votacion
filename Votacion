<!doctype html>
<html lang="es">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Sistema de Votaci√≥n</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #f0f2f5;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        .page-container {
            flex-grow: 1;
            padding: 20px;
        }
        .content-card {
            max-width: 800px;
            margin: 20px auto;
            background-color: #ffffff;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .content-card h1 {
            color: #0d6efd;
            margin-bottom: 25px;
            font-weight: 600;
            text-align: center;
        }
        .question-block {
            margin-bottom: 25px;
            padding: 15px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            background-color: #f8f9fa;
        }
        .question-block legend {
            font-size: 1.1rem;
            font-weight: 500;
            margin-bottom: 10px;
        }
        .form-check-label {
            margin-left: 5px;
        }
        .footer-internal {
            text-align: center;
            padding: 20px;
            background-color: #f8f9fa;
            color: #6c757d;
            font-size: 0.85rem;
            border-top: 1px solid #dee2e6;
            margin-top: auto;
        }
        .footer-internal p { margin-bottom: 0.2rem; }
        #loader {
            display: none;
            text-align: center;
            margin: 20px 0;
        }
         .alert .bi {
            font-size: 1.2em;
            margin-right: 8px;
        }
        .back-to-home-btn {
            position: fixed;
            top: 15px;
            left: 15px;
            z-index: 1030;
        }
        .user-identifier-display {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 1.5rem;
            padding: 10px;
            background-color: #e9ecef;
            border-radius: 0.25rem;
            text-align: center;
        }
    </style>
</head>
<body>
    <a href="<?= ScriptApp.getService().getUrl() ?>" class="btn btn-outline-secondary back-to-home-btn" title="Volver al Portal">
        <i class="bi bi-arrow-left-circle"></i> Inicio
    </a>

    <div class="page-container">
        <div class="content-card">
            <h1><i class="bi bi-check2-square"></i> Sistema de Votaci√≥n</h1>
            
            <div id="statusMessage" class="mt-3"></div>
            <div id="loader">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
            </div>

            <div id="userIdentifierDisplay" class="user-identifier-display" style="display:none;">
                Votando como: <strong id="displayedUserId"></strong>
            </div>

            <form id="votingForm" style="display:none;">
                <!-- El campo de entrada de UserID ha sido eliminado -->
                <div id="questionsContainer">
                    <!-- Las preguntas se cargar√°n aqu√≠ -->
                </div>
                <button type="submit" class="btn btn-primary btn-lg w-100 mt-3">
                    <i class="bi bi-send-check-fill"></i> Enviar Votos
                </button>
            </form>
            <div id="alreadyVotedMessage" class="alert alert-info" style="display:none;">
                <i class="bi bi-info-circle-fill"></i> <span id="votedText"></span>
            </div>
            <div id="notRegisteredMessage" class="alert alert-warning" style="display:none;">
                <i class="bi bi-exclamation-triangle-fill"></i> Para votar, primero debe <a href="#" id="goToAccessPageLink">identificarse a trav√©s del control de acceso QR</a>.
            </div>
        </div>
    </div>

    <footer class="footer-internal">
        <p>Plataforma de Gesti√≥n de Asambleas y Control de Ingreso</p>
        <p>ü§ñ Desarrollado por: NS-5 ¬© <span id="currentYearVotacion"></span></p>
        <p>310 569 64 35</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const SPREADSHEET_ID = "<?= spreadsheetId ?>"; 
        const USERID_STORAGE_KEY = 'userid_' + SPREADSHEET_ID;
        const VOTED_FLAG_KEY = 'voted_assembly_' + SPREADSHEET_ID; 

        document.getElementById("currentYearVotacion").textContent = new Date().getFullYear();
        
        const votingForm = document.getElementById('votingForm');
        const questionsContainer = document.getElementById('questionsContainer');
        // const userIdInput = document.getElementById('userIdInput'); // Ya no existe
        const statusMessage = document.getElementById('statusMessage');
        const loader = document.getElementById('loader');
        const alreadyVotedMessage = document.getElementById('alreadyVotedMessage');
        const votedText = document.getElementById('votedText');
        const notRegisteredMessage = document.getElementById('notRegisteredMessage');
        const userIdentifierDisplay = document.getElementById('userIdentifierDisplay');
        const displayedUserIdElem = document.getElementById('displayedUserId');
        const goToAccessPageLink = document.getElementById('goToAccessPageLink');

        let currentUserId = null; // Variable global para almacenar el UserID

        document.addEventListener('DOMContentLoaded', function() {
            currentUserId = localStorage.getItem(USERID_STORAGE_KEY);

            if (!currentUserId) {
                showNotRegisteredMessage();
                // Construir la URL para la p√°gina de acceso. Asumimos que es la ra√≠z o ?page=acceso
                // Si doGet tiene "acceso" como default, la URL base es suficiente.
                // Si "acceso" es una p√°gina espec√≠fica, ser√≠a ScriptApp.getService().getUrl() + "?page=acceso"
                // Necesitamos obtener la URL base de la app web.
                 google.script.run.withSuccessHandler(function(webAppUrl) {
                    goToAccessPageLink.href = webAppUrl + "?page=acceso"; // O solo webAppUrl si 'acceso' es el default
                 }).getWebAppUrl();
                return;
            }

            displayedUserIdElem.textContent = currentUserId;
            userIdentifierDisplay.style.display = 'block';

            if (localStorage.getItem(VOTED_FLAG_KEY) === 'true') {
                showAlreadyVotedMessage(`Usted (${currentUserId}) ya ha enviado sus votos desde este navegador.`);
                return;
            }
            loadQuestions();
        });

        function showNotRegisteredMessage() {
            votingForm.style.display = 'none';
            loader.style.display = 'none';
            statusMessage.innerHTML = '';
            alreadyVotedMessage.style.display = 'none';
            userIdentifierDisplay.style.display = 'none';
            notRegisteredMessage.style.display = 'block';
        }

        function showAlreadyVotedMessage(message) {
            votingForm.style.display = 'none';
            loader.style.display = 'none';
            statusMessage.innerHTML = '';
            notRegisteredMessage.style.display = 'none';
            votedText.textContent = message;
            alreadyVotedMessage.style.display = 'block';
            userIdentifierDisplay.style.display = 'block'; // Mostrar con qui√©n vot√≥
        }

        function loadQuestions() {
            loader.style.display = 'block';
            statusMessage.innerHTML = '';
            google.script.run
                .withSuccessHandler(function(response) {
                    loader.style.display = 'none';
                    if (response.success && response.questions && response.questions.length > 0) {
                        renderQuestions(response.questions);
                        votingForm.style.display = 'block';
                    } else if (response.success && (!response.questions || response.questions.length === 0)) {
                        showMessage('info', 'No hay preguntas de votaci√≥n disponibles en este momento.');
                        userIdentifierDisplay.style.display = 'block'; // Todav√≠a mostrar qui√©n es el usuario
                    } 
                    else {
                        showMessage('danger', 'Error al cargar preguntas: ' + (response.message || 'Desconocido'));
                    }
                })
                .withFailureHandler(function(error) {
                    loader.style.display = 'none';
                    showMessage('danger', 'Error de comunicaci√≥n al cargar preguntas: ' + error.message);
                    console.error("Error cargando preguntas:", error);
                })
                .getVotingQuestions();
        }

        function renderQuestions(questions) {
            questionsContainer.innerHTML = '';
            questions.forEach((q, index) => {
                const questionDiv = document.createElement('div');
                questionDiv.className = 'question-block';
                
                const legend = document.createElement('legend');
                legend.textContent = `${index + 1}. ${q.text}`;
                questionDiv.appendChild(legend);

                if (q.type === 'unica' && q.options) {
                    q.options.forEach(option => {
                        const formCheckDiv = document.createElement('div');
                        formCheckDiv.className = 'form-check';

                        const input = document.createElement('input');
                        input.className = 'form-check-input';
                        input.type = 'radio';
                        input.name = `question_${q.id}`;
                        input.id = `q_${q.id}_opt_${option.replace(/\s+/g, '_')}`;
                        input.value = option;
                        input.required = true;

                        const label = document.createElement('label');
                        label.className = 'form-check-label';
                        label.htmlFor = input.id;
                        label.textContent = option;

                        formCheckDiv.appendChild(input);
                        formCheckDiv.appendChild(label);
                        questionDiv.appendChild(formCheckDiv);
                    });
                }
                questionsContainer.appendChild(questionDiv);
            });
        }

        votingForm.addEventListener('submit', function(e) {
            e.preventDefault();
            // currentUserId ya est√° establecido globalmente
            if (!currentUserId) {
                showMessage('danger', 'No se ha identificado un usuario. Por favor, reg√≠strese primero.');
                showNotRegisteredMessage(); // Asegurarse que el mensaje correcto est√© visible
                return;
            }

            const answers = {};
            const questions = questionsContainer.querySelectorAll('.question-block');
            let allAnswered = true;
            questions.forEach(qDiv => {
                const radioNameInput = qDiv.querySelector('input[type="radio"]');
                if (!radioNameInput) return; // Si no hay radios, no procesar

                const radioName = radioNameInput.name;
                const selectedOption = qDiv.querySelector(`input[name="${radioName}"]:checked`);
                
                if (selectedOption) {
                    const questionId = radioName.split('_')[1]; 
                    answers[questionId] = selectedOption.value;
                } else {
                    allAnswered = false;
                }
            });

            if (!allAnswered && questions.length > 0) { // Solo si hay preguntas y no todas respondidas
                showMessage('warning', 'Por favor, responda todas las preguntas antes de enviar.');
                return;
            }
            
            if (Object.keys(answers).length === 0 && questions.length > 0) { // Si hay preguntas pero no se seleccion√≥ nada
                 showMessage('warning', 'No se ha seleccionado ninguna respuesta.');
                 return;
            }

            loader.style.display = 'block';
            statusMessage.innerHTML = '';

            google.script.run
                .withSuccessHandler(function(response) {
                    loader.style.display = 'none';
                    if (response.success) {
                        // showMessage('success', response.message); // El mensaje de "alreadyVoted" es m√°s completo
                        votingForm.style.display = 'none';
                        localStorage.setItem(VOTED_FLAG_KEY, 'true'); 
                        showAlreadyVotedMessage(`Usted (${currentUserId}) ha enviado sus votos exitosamente.`);
                    } else {
                        showMessage('danger', 'Error al enviar votos: ' + response.message);
                        if (response.message && response.message.includes("ya ha registrado un voto")) {
                            localStorage.setItem(VOTED_FLAG_KEY, 'true');
                            showAlreadyVotedMessage(`Error: ${response.message}`);
                        }
                    }
                })
                .withFailureHandler(function(error) {
                    loader.style.display = 'none';
                    showMessage('danger', 'Error de comunicaci√≥n al enviar votos: ' + error.message);
                    console.error("Error enviando votos:", error);
                })
                .submitVotes(currentUserId, answers); // Usar currentUserId
        });

        function showMessage(type, message) {
            const iconMap = {
                success: 'check-circle-fill',
                danger: 'x-octagon-fill',
                warning: 'exclamation-triangle-fill',
                info: 'info-circle-fill'
            };
            statusMessage.innerHTML = `<div class="alert alert-${type} d-flex align-items-center" role="alert">
                                            <i class="bi bi-${iconMap[type]} me-2"></i>
                                            <div>${message}</div>
                                       </div>`;
            statusMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
    </script>
</body>
</html>
